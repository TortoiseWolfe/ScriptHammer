openapi: 3.0.0
info:
  title: Supabase Auth API Contracts
  version: 1.0.0
  description: API contracts for authentication endpoints (Supabase Auth)

servers:
  - url: https://vswxgxbjodpgwfgsjrhq.supabase.co/auth/v1
    description: Supabase Auth Server

paths:
  /signup:
    post:
      summary: Sign up new user
      operationId: signUp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid email or password
        '422':
          description: Email already registered

  /token:
    post:
      summary: Sign in with email and password
      operationId: signIn
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password, grant_type]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                grant_type:
                  type: string
                  enum: [password]
      responses:
        '200':
          description: Signed in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid credentials
        '429':
          description: Too many attempts (rate limited)

  /logout:
    post:
      summary: Sign out current user
      operationId: signOut
      security:
        - BearerAuth: []
      responses:
        '204':
          description: Signed out successfully
        '401':
          description: Not authenticated

  /recover:
    post:
      summary: Request password reset email
      operationId: resetPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Reset email sent
        '400':
          description: Invalid email

  /verify:
    post:
      summary: Verify email with token
      operationId: verifyEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [token, type]
              properties:
                token:
                  type: string
                type:
                  type: string
                  enum: [signup, recovery]
      responses:
        '200':
          description: Email verified
        '400':
          description: Invalid or expired token

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuthResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        session:
          $ref: '#/components/schemas/Session'

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        email_confirmed_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Session:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        expires_in:
          type: integer
        expires_at:
          type: integer
        token_type:
          type: string
          enum: [bearer]
